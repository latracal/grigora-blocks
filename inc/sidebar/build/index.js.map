{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;CCJA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;CAEA;;AACA;;AAQA,MAAMO,8BAA8B,GAAG,MAAM;EACzC,MAAMC,WAAW,GAAGH,wEAApB;EACH,MAAMI,cAAc,GAAGN,mEAAU,CAAC,QAAD,CAAjC;EACAO,OAAO,CAACC,GAAR,CAAYF,cAAZ,EAH4C,CAIzC;;EACAC,OAAO,CAACC,GAAR,CAAYH,WAAZ;EAEA,OAAO,IAAP;AACH,CARD;;AAUAR,kEAAc,CAAE,oCAAF,EAAwC;EAClDY,MAAM,EAAEL,8BAD0C,CAElD;;AAFkD,CAAxC,CAAd,C","sources":["webpack://grigora-settings/external window [\"wp\",\"blockEditor\"]","webpack://grigora-settings/external window [\"wp\",\"components\"]","webpack://grigora-settings/external window [\"wp\",\"data\"]","webpack://grigora-settings/external window [\"wp\",\"editPost\"]","webpack://grigora-settings/external window [\"wp\",\"plugins\"]","webpack://grigora-settings/webpack/bootstrap","webpack://grigora-settings/webpack/runtime/compat get default export","webpack://grigora-settings/webpack/runtime/define property getters","webpack://grigora-settings/webpack/runtime/hasOwnProperty shorthand","webpack://grigora-settings/webpack/runtime/make namespace object","webpack://grigora-settings/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\"\r\n\r\n// import { registerPlugin } from '@wordpress/plugins';\r\n// import MetaSettings from './settings';\r\n\r\n// const { __ } = wp.i18n;\r\n\r\n// registerPlugin( 'grigora-settings', { render: MetaSettings } );\r\n\r\nimport { registerPlugin } from '@wordpress/plugins';\r\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { useSetting } from '@wordpress/block-editor';\r\n// import { useGlobalStylesOutput } from './global-styles';\r\nimport {\r\n\tGlobalStylesContext,\r\n\tgetMergedGlobalStyles,\r\n\t// useMobileGlobalStylesColors,\r\n\t// alignmentHelpers,\r\n\tuseGlobalStyles\r\n} from '@wordpress/components';\r\n\r\nconst PluginDocumentSettingPanelDemo = () => {\r\n    const globalStyle = getMergedGlobalStyles;\r\n\tconst customProperty = useSetting('layout');\r\n\tconsole.log(customProperty);\r\n    // const [ styles, settings ] = useGlobalStylesOutput();\r\n    console.log(globalStyle);\r\n\r\n    return null;\r\n}\r\n\r\nregisterPlugin( 'plugin-document-setting-panel-demo', {\r\n    render: PluginDocumentSettingPanelDemo,\r\n    // icon: 'palmtree',\r\n} );"],"names":["registerPlugin","PluginDocumentSettingPanel","useSelect","useSetting","GlobalStylesContext","getMergedGlobalStyles","useGlobalStyles","PluginDocumentSettingPanelDemo","globalStyle","customProperty","console","log","render"],"sourceRoot":""}